# set <Leader>r to refresh the configuration
unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# set Leader to Ctrl+a (from default Ctrl+b)
set -g prefix C-a

# switch between panes like in vim
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R


# unbind ]
# unbind [
# cycle prev/next pane
# bind -n ] select-pane -t :.+
# bind -n [ select-pane -t :.-
set -g focus-events on
# enable mouse
set -g mouse on
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g default-terminal 'screen-256color'
 # enable vi mode (required to increase/decrease panes in tmux and escape from lazyterm)
 # see https://www.reddit.com/r/neovim/comments/12f3dzo/escaping_to_normal_mode_from_insert_mode_is_not/
 set -sg escape-time 10

 # use zsh as the default shell
 set-option -g default-shell /bin/zsh

 # notes on commands:
 # ctrl+b :kill-server

 # fix weird bug/issue with duplicate input
 # https://stackoverflow.com/questions/45931164/duplicated-characters-and-non-updating-input-using-tmux-in-zsh
 # set -g default-terminal "screen-256color"

 # set 24-bit color, so colors in neovim look correct
 set-option -sa terminal-overrides ",xterm*:Tc"

 # Start windows and panes at 1, not 0
 set -g base-index 1
 setw -g pane-base-index 1

##############################################################################
# Added by me
##############################################################################
# [off | colour | arrows | both]
set -g pane-border-indicators both

unbind "\\"
bind "\\" split-window -h -c "#{pane_current_path}"

# Create horizontal split
unbind '%'
unbind '-'
bind - split-window -v -c "#{pane_current_path}"

unbind 1
unbind 2
bind 1 select-window -t 1
bind 2 select-window -t 2
unbind Space

bind a switch-client -l # Alternate session

# Resize pane to zoom so it occupies the entire screen
unbind m
bind -r m resize-pane -Z
# Go to previous window, I'm using 'p' to change to window 4


# Change the keybinding to enter copy mode from 'prefix + [' to 'prefix + v'
unbind v
bind v copy-mode

#---------------------------------------------------------------
# https://github.com/joshmedeski/sesh
bind-key "T" run-shell "sesh connect \"$(
	sesh list | fzf-tmux -p 55%,60% \
		--no-sort --border-label ' sesh ' --prompt '⚡  ' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(⚡  )+reload(sesh list)'
)\""
# bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt, use <leader>x to kill pane
set -g detach-on-destroy off # don't exit from tmux when closing a session
##############################################################################
# Plugins
##############################################################################
# tmux plugin manager
# install with
# $ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

set-environment -gF TMUX_PLUGIN_MANAGER_PATH '#{HOME}/.local/share/tmux/plugins'
if 'test ! -d "${TMUX_PLUGIN_MANAGER_PATH}/tpm"' {
  run 'mkdir -p "${TMUX_PLUGIN_MANAGER_PATH}"'
  run 'git clone https://github.com/tmux-plugins/tpm "${TMUX_PLUGIN_MANAGER_PATH}/tpm"'
  run '${TMUX_PLUGIN_MANAGER_PATH}/tpm/bin/install_plugins'
}


# list of plugins (install with <prefix>I)
set -g @plugin 'tmux-plugins/tpm'
# install packages with <C-s>I
set -g @plugin 'christoomey/vim-tmux-navigator'  # enable vim-style <C-hjkl> pane switching, also requires vim plugin for this
# set -g @plugin 'tmux-plugins/tmux-sensible'  # screws with Wezterm/WSL
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'minhdanh/tmux-network-speed'
set -g @plugin 'dreknix/tmux-primary-ip'
set -g @plugin 'tmux-plugins/tmux-cpu'
##############################################################################
# tmux status bar - catppuccin
##############################################################################
 # Configure Online
set -g @online_icon "ok"
set -g @offline_icon "nok"
 set -g @thm_bg "#000000"
set -g @thm_maroon "#d65d0e"
set -g @thm_yellow "#d79921"
set -g @thm_blue "#0E86D4"
set -g @thm_green "#98971a"
set -g @thm_red "#cc241d"
set -g @thm_pink "#d3869b"
set -g @thm_mauve "#b16286"
set -g @thm_peach '#FFE5B4'
# set -g @thm_overlay_0 '#000000'
 set -g @thm_verygreen "#00ff00"
 set -g @thm_inactive "#444444"

set -g @cpu_temp_format "%2.0f" # printf format to use to display temperature
set -g @cpu_temp_unit "C" # supports C & F
set -g @cpu_low_fg_color "#[fg=#00ff00]"
set -g @cpu_percentage_format "%5.1f%%" # Add left padding
# status left look and feel
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_verygreen},fg=#{@thm_bg},bold]  #S },#{#[fg=#{@thm_pink}]  #S }}"

set -ga status-left "#[fg=#{@thm_pink},none]┇"
# set -ga status-left "#[fg=#{@thm_yellow}] 📁 #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}} │} "
set -ga status-left "#[fg=#{@thm_green}] 󰭦 %d-%m 󰅐 %I:%M %p "
set -ga status-left "#[fg=#{@thm_pink},none]┇"
set -ag status-left '#[fg=#{@thm_mauve}]  #{ram_percentage} '
set -ga status-left "#[bg=#{@thm_red},fg=brightwhite]#{?window_zoomed_flag,┇🔍zoom ,}"

 # set -g status-left "#( ~/.dotfiles/scripts/tmux_left_status.sh )"
# status right look and feel
set -g status-right-length 100
set -g status-right ""
set -g status-right '#{battery_icon_status}#{battery_percentage} '
set -ga status-right "#[fg=#{@thm_maroon}, none]┇"
set -ga status-right "#{?#{==:#{online_status},ok},#[fg=yellow] 󰖩 on ,#[fg=red,bold]#[reverse] 󰖪 off }"
set -ga status-right "#[fg=#{@thm_maroon}, none]┇"
set -ag  status-right "#{primary_ip} ┇#{network_speed}"

# Configure Tmux
set -g status-position top
set -g status-style "fg=#{@thm_blue}"
set -g status-justify "absolute-centre"
 set -s status-interval 1

# pane border look and feel
set -g pane-border-status top
set -g pane-border-format "#(sh ~/.dotfiles/pane-border-format.sh \
  --pane-current-path=#{pane_current_path} \
  --pane-active=#{pane_active})"


# window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "Window"
set-option -g renumber-windows on
set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "fg=#{@thm_peach}"
set -g window-status-last-style "fg=#{@thm_maroon}"
set -g window-status-activity-style "fg=#{@thm_green}"
set -g window-status-bell-style "fg=#{@thm_green}"
set -gF window-status-separator "┆⊱🪷⊰┆"

set -g window-status-current-format "🗔 #I#{?#{!=:#{window_name},Window},: #W,} "
 set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"
# ##########################################################################


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# messages
set -g message-style 'fg=yellow bg=terminal bold'

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
 set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
 set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
 set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
 set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
 set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# set -g @plugin 'tmux-plugins/tpm'
run '#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm'

##############################################################################
# tmux status bar - catppuccin
##############################################################################

# set -g pane-border-format "#{?#{==:#{pane_title},remote_development}, #[fg=#{@thm_maroon} bg=#{@thm_rosewater}],#{?#{==:#{pane_title},quality_assurance},#[bg=#{@thm_yellow}],#{?#{==:#{pane_title},production},#[fg=#{@thm_pink} bg=#{@thm_green}],#[default]}}}#[fg=brightwhite#, bg=#{@thm_red}] #W [#{pane_index}] → #{pane_title} -> #[fg=brightwhite]#(hostname)@#(host `hostname` | cut -d ' ' -f 4)"
# set -g pane-active-border-style "bg=#{@thm_maroon},fg=#{@thm_verygreen}, bold"
# set -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_inactive}"
# set -g pane-border-lines single

# source the plugin here
# run '#{TMUX_PLUGIN_MANAGER_PATH}/tmux/catppuccin.tmux'
# Configure Catppuccin
# set -g @plugin 'catppuccin/tmux'
# set -g @catppuccin_flavor "macchiato"
# set -g @catppuccin_status_background "none"
# set -g @catppuccin_window_status_style "none"
# set -g @catppuccin_pane_status_enabled "off"
# set -g @catppuccin_pane_border_status "off"



# set -g @catppuccin_window_default_text "#{window_name}"
# set -g @catppuccin_pane_active_border_style "##{?pane_in_mode,fg=#{@thm_verygreen},##{?pane_synchronized,fg=#{@thm_rosewater},fg=#{@thm_verygreen}}}"
# set -agF status-right "#{@catppuccin_status_user}"
# set -agF status-right "#{@catppuccin_status_host}"
# set -agF status-left "#{@catppuccin_status_session}"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_pink},none]│"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_maroon}]  #{pane_current_command} "
